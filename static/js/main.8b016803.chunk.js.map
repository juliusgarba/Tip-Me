{"version":3,"sources":["asset/restaurant.jpg","components/Home/Home.js","components/Staff/Staff.js","App.js","reportWebVitals.js","index.js"],"names":["Tip","props","useState","walletId","setWalletId","message","setMessage","walletAddress","setWalletAddress","amount","setAmount","nameIsValid","setNameIsValid","setWalletAddressFunc","namesTaken","includes","checkAddress","wid","Modal","size","centered","Header","Title","id","Body","Form","Group","className","controlId","Label","Control","as","rows","value","onChange","e","target","type","placeholder","Button","onClick","hidden","disabled","onHide","variant","tip","Register","uniqueId","setUniqueId","associatedWallet","unique","setUnique","useEffect","uid","nt","nameIsUnique","Text","userWallet","register","Home","bal","showTipModal","setShowTipModal","showRegisterModal","setShowRegisterModal","length","src","bgImg","show","Staff","tips","map","sender","BigNumber","shiftedBy","toString","Date","Number","timeStamp","toUTCString","App","kit","setKit","balance","setBalance","openTipContract","setOpenTipContract","setNamesTaken","isStaff","setIsStaff","setTips","connectWallet","getBalance","setNamesTakenFunc","getTips","setIsStaffFunc","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","defaultAccount","console","log","alert","getTotalBalance","cUsdBalance","CELO","toFixed","contract","Contract","openTipAbi","methods","readMyTips","call","myTips","_tips","i","Promise","resolve","readTip","_tip","push","all","loadedTips","_uniqueId","createNewWallet","send","from","location","reload","readNamesTaken","_namesTaken","checkAddressWithNameFunc","checkAddressWithName","receiverId","receiverAddress","bigAmount","checkNameWithAddress","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2RAAe,MAA0B,uC,0CCOnCA,EAAM,SAACC,GACX,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA4BN,mBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEMC,EAAoB,iDAAG,WAAOC,GAAP,oFACtBA,EAAWC,SAASZ,GADE,uBAEzBK,EAAiB,IACjBI,GAAe,GAHU,iCAMzBA,GAAe,GANU,SAOPX,EAAMe,aAAab,GAPZ,OAOnBc,EAPmB,OAQzBT,EAAiBS,GARQ,4CAAH,sDAY1B,OACE,eAACC,EAAA,EAAD,2BACMjB,GADN,IAEEkB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACF,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,gCAAhB,2BAIF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,uBAAvC,UACE,eAACH,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,cAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,GAAG,WACHC,KAAM,EACNC,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAO7B,EAAW6B,EAAEC,OAAOH,aAGzC,cAACR,EAAA,EAAKI,MAAN,4CACA,cAACJ,EAAA,EAAKK,QAAN,CACEO,KAAK,OACLC,YAAY,gBACZL,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAO/B,EAAY+B,EAAEC,OAAOH,UAExC,cAACM,EAAA,EAAD,CAAQC,QAAS,kBAAM3B,EAAqBZ,EAAMa,aAAlD,mBAGA,qBAAKa,UAAU,4BAA4Bc,OAAQ9B,EAAnD,0CAIF,eAACc,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,oBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,6BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcO,KAAK,OAAOK,UAAU,EAAMT,MAAO1B,OAEnD,eAACkB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,aAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEO,KAAK,OACLJ,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOzB,EAAUyB,EAAEC,OAAOH,aAGxC,cAACM,EAAA,EAAD,CAAQC,QAASvC,EAAM0C,OAAvB,mBACA,cAACJ,EAAA,EAAD,CACEK,QAAQ,UACRJ,QAAO,gCAAE,iHACPvC,EAAM4C,IAAIxC,EAASF,EAAUI,EAAeE,IADrC,2CAFX,2BAcJqC,EAAW,SAAC7C,GAChB,MAAgCC,mBAAS,IAAzC,mBAAO6C,EAAP,KAAiBC,EAAjB,KACA,EAAgD9C,mBAAS,IAAzD,mBAAO+C,EAAP,KACA,GADA,KAC4B/C,oBAAS,IAArC,mBAAOgD,EAAP,KAAeC,EAAf,KAgBA,OAJAC,qBAAU,YAVW,WACnB,IAAMC,EAAMN,EAAW,OACnBO,EAAKrD,EAAMa,WACf,OAAIwC,QAAJ,IAAIA,KAAIvC,SAASsC,GACfF,GAAU,GAEVA,GAAU,GAKZI,KACC,CAACR,IAGF,eAAC7B,EAAA,EAAD,2BACMjB,GADN,IAEEkB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACF,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,gCAAhB,mCAIF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,uBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,2CACA,cAACJ,EAAA,EAAKK,QAAN,CACEO,KAAK,OACLC,YAAY,YACZL,MAAOc,EACPb,SAAU,SAACC,GAAD,OAAOa,EAAYb,EAAEC,OAAOH,UAExC,eAACR,EAAA,EAAK+B,KAAN,CAAW7B,UAAU,aAArB,qFAEW,sBAAMA,UAAU,iBAAhB,mBAFX,oBAGa,sBAAMA,UAAU,iBAAhB,0BAEb,sBACEA,UAAU,4BACVc,OAAQS,IAAWH,EAFrB,cAIIA,EAJJ,4BAMA,sBACEpB,UAAU,4BACVc,QAASS,IAAWH,EAFtB,cAIIA,EAJJ,2BAQF,eAACtB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,oBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,kCACA,cAACJ,EAAA,EAAKK,QAAN,CACEO,KAAK,OACLJ,MAAOhC,EAAMwD,WACbf,UAAU,OAGd,cAACH,EAAA,EAAD,CAAQC,QAASvC,EAAM0C,OAAvB,mBACA,cAACJ,EAAA,EAAD,CACEK,QAAQ,UACRP,KAAK,SACLG,QAAS,kBAAMvC,EAAMyD,SAASX,EAAUE,IAH1C,gCAiEKU,EApDF,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,IAAK9C,EAA0D,EAA1DA,WAAY4C,EAA8C,EAA9CA,SAAUb,EAAoC,EAApCA,IAAK7B,EAA+B,EAA/BA,aAAcyC,EAAiB,EAAjBA,WAC5D,EAAwCvD,oBAAS,GAAjD,mBAAO2D,EAAP,KAAqBC,EAArB,KACA,EAAkD5D,oBAAS,GAA3D,mBAAO6D,EAAP,KAA0BC,EAA1B,KAEA,OACE,mCACGlD,EAAWmD,OACV,sBAAKtC,UAAU,OAAf,UACE,qBAAKA,UAAU,SAASuC,IAAKC,IAC7B,sBAAKxC,UAAU,UAAf,sBAAmCiC,EAAnC,WACA,sBAAKjC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,mEAGA,qBAAKA,UAAU,YAAf,wCACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACEyC,KAAMP,EACNlB,OAAQ,kBAAMmB,GAAgB,IAC9BhD,WAAYA,EACZE,aAAcA,EACd6B,IAAKA,IAEP,wBACElB,UAAU,WACVa,QAAS,kBAAMsB,GAAgB,IAFjC,iBAMA,cAAC,EAAD,CACEM,KAAML,EACNpB,OAAQ,kBAAMqB,GAAqB,IACnClD,WAAYA,EACZ4C,SAAUA,EACVD,WAAYA,IAEd,wBACE9B,UAAU,WACVa,QAAS,kBAAMwB,GAAqB,IAFtC,+BAUN,+DCvLOK,G,QAhCD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACE,sBAAK3C,UAAU,QAAf,UACE,qBAAKA,UAAU,gBAAf,sCACC2C,GACC,8BACGA,EAAKL,OAAS,EACb,qCACG,IADH,OAEGK,QAFH,IAEGA,OAFH,EAEGA,EAAMC,KAAI,SAAC1B,GAAD,OACT,sBAAKlB,UAAU,eAAf,UACE,sBAAMA,UAAU,iBAAhB,SAAkCkB,EAAI2B,SADxC,YACgE,IAC9D,uBAAM7C,UAAU,iBAAhB,UACG,IAAI8C,IAAU5B,EAAIpC,QAAQiE,WAAW,IAAIC,WAD5C,WAEQ,IAJV,iBAME,sBAAMhD,UAAU,iBAAhB,SAAkCkB,EAAIxC,UANxC,OAM4D,IAC1D,sBAAMsB,UAAU,iBAAhB,SACG,IAAIiD,KAAKC,OAAuB,IAAhBhC,EAAIiC,YAAmBC,yBAMhD,iD,SC2KGC,MA3Lf,WACE,MAAsB9E,qBAAtB,mBAAO+E,EAAP,KAAYC,EAAZ,KACA,EAA8BhF,mBAAS,GAAvC,mBAAOiF,EAAP,KAAgBC,EAAhB,KACA,EAA0ClF,qBAA1C,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA8CN,qBAA9C,mBAAOmF,EAAP,KAAwBC,EAAxB,KACA,EAAoCpF,mBAAS,IAA7C,mBAAOY,EAAP,KAAmByE,EAAnB,KACA,EAA8BrF,mBAAS,MAAvC,mBAAOsF,EAAP,KAAgBC,EAAhB,KACA,EAAwBvF,mBAAS,MAAjC,mBAAOoE,EAAP,KAAaoB,EAAb,KAEAtC,qBAAU,WACRuC,MACC,IAEHvC,qBAAU,WACJ6B,GAAO1E,GACTqF,MAED,CAACX,EAAK1E,IAET6C,qBAAU,WACJiC,IACFQ,IACAC,OAED,CAACT,IAEJjC,qBAAU,WACJ7C,GAAiB8E,GACnBU,MAED,CAACV,EAAiB9E,IAGrB,IAAMoF,EAAa,iDAAG,wGAChBK,OAAOC,KADS,0CAGVD,OAAOC,KAAKC,SAHF,cAIVC,EAAO,IAAIC,IAAKJ,OAAOC,MACzBhB,EAAMoB,yBAAeF,GALT,SAOOlB,EAAIkB,KAAKG,IAAIC,cAPpB,OAOVC,EAPU,OAQVC,EAAiBD,EAAS,GAChCvB,EAAIwB,eAAiBA,EAErBvB,EAAOD,GACPzE,EAAiBiG,GAZD,kDAchBC,QAAQC,IAAR,MAdgB,gCAiBlBC,MACE,0EAlBgB,0DAAH,qDAwBbhB,EAAU,iDAAG,2HAEOX,EAAI4B,gBAAgBtG,GAF3B,OAET4E,EAFS,OAGT2B,EAAc3B,EAAQ4B,KAAKrC,WA/DhB,IA+D2CsC,QAAQ,GAC9DC,EAAW,IAAIhC,EAAIkB,KAAKG,IAAIY,SAASC,EA/D1B,8CAiEjB7B,EAAmB2B,GACnB7B,EAAW0B,GAPI,kDASfJ,QAAQC,IAAR,MATe,0DAAH,qDAaVb,EAAO,iDAAG,kQAEST,EAAgB+B,QAAQC,aAAaC,OAF9C,OAENC,EAFM,OAGNC,EAAQ,GAHF,iCAIHC,GAJG,iGAKM,IAAIC,QAAJ,iDAAY,WAAOC,GAAP,iGACTtC,EAAgB+B,QAAQQ,QAAQL,EAAOE,IAAIH,OADlC,OACtBO,EADsB,OAE1BF,EAAQ,CACNtH,QAASwH,EAAK,GACdpH,OAAQoH,EAAK,GACbrD,OAAQqD,EAAK,GACb/C,UAAW+C,EAAK,KANQ,2CAAZ,uDALN,OAKNhF,EALM,OAcV2E,EAAMM,KAAKjF,GAdD,0CAIH4E,EAAI,EAJD,YAIIA,EAAIF,EAAOtD,QAJf,0CAIHwD,GAJG,eAIuBA,IAJvB,wCAgBaC,QAAQK,IAAIP,GAhBzB,QAgBNQ,EAhBM,OAiBZtB,QAAQC,IAAIqB,EAAW/D,QACvByB,EAAQsC,GAlBI,2GAoBZtB,QAAQC,IAAR,MApBY,wDAAH,qDAwBPjD,EAAQ,iDAAG,WAAOX,GAAP,qFACXA,EADW,wBAEPkF,EAAYlF,EAAW,OAFhB,kBAILsC,EAAgB+B,QACnBc,gBAAgBD,EAAW1H,GAC3B4H,KAAK,CAAEC,KAAM7H,IANL,OAOXqG,MAAM,uCACNZ,OAAOqC,SAASC,SARL,gDAUX5B,QAAQC,IAAR,MAVW,gCAabC,MAAM,2BAbO,yDAAH,sDAiBRf,EAAiB,iDAAG,uHAEIR,EAAgB+B,QAAQmB,iBAAiBjB,OAF7C,OAEhBkB,EAFgB,OAGtBjD,EAAciD,GAHQ,gDAKtB9B,QAAQC,IAAR,MALsB,yDAAH,qDASjB8B,EAAwB,iDAAG,WAAOtI,GAAP,0GAEDkF,EAAgB+B,QACzCsB,qBAAqBvI,GACrBmH,OAJ0B,cAEvB/G,EAFuB,yBAKtBA,GALsB,gCAO7BmG,QAAQC,IAAR,MAP6B,yDAAH,sDAWxB9D,EAAG,iDAAG,WAAOxC,EAASsI,EAAYC,EAAiBnI,GAA7C,oFACLJ,GAAYsI,GAAeC,EADtB,gBAERhC,MAAM,4CAFE,8BAIRF,QAAQC,IAAItG,EAASsI,EAAYC,EAAiBnI,GAC5CoI,EAAY,IAAIpE,IAAUhE,GAC7BiE,UA5Ic,IA6IdC,WAPK,kBASAU,EAAgB+B,QACnBvE,IAAIxC,EAASsI,EAAYC,GACzBT,KAAK,CAAEC,KAAM7H,EAAe0B,MAAO4G,IAXhC,OAYNjC,MAAM,wCACNZ,OAAOqC,SAASC,SAbV,kDAeN5B,QAAQC,IAAR,MAfM,0DAAH,4DAoBHZ,EAAc,iDAAG,yHAEAV,EAAgB+B,QAChC0B,qBAAqBvI,GACrB+G,OAJgB,cAEbyB,EAFa,gBAKG1D,EAAgB+B,QAAQ5B,QAAQuD,GAAMzB,OALzC,OAKb9B,EALa,OAMnBC,EAAWD,GANQ,kDAQnBkB,QAAQC,IAAR,MARmB,0DAAH,qDAYpB,OACE,mCACe,OAAZnB,EACC,qBAAK7D,UAAU,MAAf,SACI6D,EAUA,cAAC,EAAD,CAAOlB,KAAMA,IATb,cAAC,EAAD,CACEV,IAAKuB,EACLrE,WAAYA,EACZ4C,SAAUA,EACVb,IAAKA,EACL7B,aAAcyH,EACdhF,WAAYlD,MAOlB,+DCrLOyI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,K","file":"static/js/main.8b016803.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/restaurant.ae46d8b0.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport bgImg from \"../../asset/restaurant.jpg\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./Home.css\";\r\n\r\nconst Tip = (props) => {\r\n  const [walletId, setWalletId] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [nameIsValid, setNameIsValid] = useState(true);\r\n\r\n  const setWalletAddressFunc = async (namesTaken) => {\r\n    if (!namesTaken.includes(walletId)) {\r\n      setWalletAddress(\"\");\r\n      setNameIsValid(false);\r\n      return;\r\n    } else {\r\n      setNameIsValid(true);\r\n      const wid = await props.checkAddress(walletId);\r\n      setWalletAddress(wid);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Tip a staff\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formUniqueIdentifier\">\r\n            <Form.Group className=\"mb-3\" controlId=\"formMessage\">\r\n              <Form.Label>Message</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Label>Enter staff wallet identifier</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"e.g alice.dac\"\r\n              value={walletId}\r\n              onChange={(e) => setWalletId(e.target.value)}\r\n            />\r\n            <Button onClick={() => setWalletAddressFunc(props.namesTaken)}>\r\n              Check\r\n            </Button>\r\n            <div className=\"check-avail check-avail-f\" hidden={nameIsValid}>\r\n              Invalid wallet identifier\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formWalletAddress\">\r\n            <Form.Label>Wallet Address</Form.Label>\r\n            <Form.Control type=\"text\" disabled={true} value={walletAddress} />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formAmount\">\r\n            <Form.Label>Amount (CELO)</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={async () =>\r\n              props.tip(message, walletId, walletAddress, amount)\r\n            }\r\n          >\r\n            Tip\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Register = (props) => {\r\n  const [uniqueId, setUniqueId] = useState(\"\");\r\n  const [associatedWallet, setAssociatedWallet] = useState(\"\");\r\n  const [unique, setUnique] = useState(true);\r\n\r\n  const nameIsUnique = () => {\r\n    const uid = uniqueId + \".dac\";\r\n    let nt = props.namesTaken;\r\n    if (nt?.includes(uid)) {\r\n      setUnique(false);\r\n    } else {\r\n      setUnique(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    nameIsUnique();\r\n  }, [uniqueId]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Register as a staff\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formUniqueIdentifier\">\r\n            <Form.Label>Enter your unique identifier</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"e.g alice\"\r\n              value={uniqueId}\r\n              onChange={(e) => setUniqueId(e.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Your unique identifier will be append with a \".dac\" extension.\r\n              Example, <span className=\"form-highlight\">alice</span> will\r\n              resolve to <span className=\"form-highlight\">alice.dac</span>\r\n            </Form.Text>\r\n            <div\r\n              className=\"check-avail check-avail-f\"\r\n              hidden={unique || !uniqueId}\r\n            >\r\n              \"{uniqueId}.dac\" is already taken\r\n            </div>\r\n            <div\r\n              className=\"check-avail check-avail-s\"\r\n              hidden={!unique || !uniqueId}\r\n            >\r\n              \"{uniqueId}.dac\" is available\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formWalletAddress\">\r\n            <Form.Label>Your wallet Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={props.userWallet}\r\n              disabled={true}\r\n            />\r\n          </Form.Group>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            onClick={() => props.register(uniqueId, associatedWallet)}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Home = ({ bal, namesTaken, register, tip, checkAddress, userWallet }) => {\r\n  const [showTipModal, setShowTipModal] = useState(false);\r\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {namesTaken.length ? (\r\n        <div className=\"home\">\r\n          <img className=\"bg-img\" src={bgImg} />\r\n          <div className=\"balance\">Balance: {bal} CELO</div>\r\n          <div className=\"home-body\">\r\n            <div className=\"home-welcome-msg\">\r\n              Welcome to the world's first decentralised restaurant\r\n            </div>\r\n            <div className=\"home-ques\">What would you like to do?</div>\r\n            <div className=\"home-btns\">\r\n              <Tip\r\n                show={showTipModal}\r\n                onHide={() => setShowTipModal(false)}\r\n                namesTaken={namesTaken}\r\n                checkAddress={checkAddress}\r\n                tip={tip}\r\n              />\r\n              <button\r\n                className=\"home-btn\"\r\n                onClick={() => setShowTipModal(true)}\r\n              >\r\n                Tip\r\n              </button>\r\n              <Register\r\n                show={showRegisterModal}\r\n                onHide={() => setShowRegisterModal(false)}\r\n                namesTaken={namesTaken}\r\n                register={register}\r\n                userWallet={userWallet}\r\n              />\r\n              <button\r\n                className=\"home-btn\"\r\n                onClick={() => setShowRegisterModal(true)}\r\n              >\r\n                Register\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>Connecting to contract...</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport \"./Staff.css\";\r\n\r\nconst Staff = ({ tips }) => {\r\n  return (\r\n    <div className=\"staff\">\r\n      <div className=\"staff-heading\">Staff Notification panel</div>\r\n      {tips && (\r\n        <div>\r\n          {tips.length > 0 ? (\r\n            <>\r\n              {\" \"}\r\n              {tips?.map((tip) => (\r\n                <div className=\"notification\">\r\n                  <span className=\"noti-highlight\">{tip.sender}</span> sent you{\" \"}\r\n                  <span className=\"noti-highlight\">\r\n                    {new BigNumber(tip.amount).shiftedBy(-18).toString()} CELO\r\n                  </span>{\" \"}\r\n                  with message \"\r\n                  <span className=\"noti-highlight\">{tip.message}</span>\" on{\" \"}\r\n                  <span className=\"noti-highlight\">\r\n                    {new Date(Number(tip.timeStamp * 1000)).toUTCString()}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <div>No tips</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Staff;\r\n","import { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\";\nimport Home from \"./components/Home/Home\";\nimport Staff from \"./components/Staff/Staff\";\nimport openTipAbi from \"./contracts/opentip.abi.json\";\n\nconst ERC20_DECIMALS = 18;\nconst openTipAddress = \"0xf2E2613d32E006ea3f300A76d69b972bf662A929\";\n\nfunction App() {\n  const [kit, setKit] = useState();\n  const [balance, setBalance] = useState(0);\n  const [walletAddress, setWalletAddress] = useState();\n  const [openTipContract, setOpenTipContract] = useState();\n  const [namesTaken, setNamesTaken] = useState([]);\n  const [isStaff, setIsStaff] = useState(null);\n  const [tips, setTips] = useState(null);\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && walletAddress) {\n      getBalance();\n    }\n  }, [kit, walletAddress]);\n\n  useEffect(() => {\n    if (openTipContract) {\n      setNamesTakenFunc();\n      getTips();\n    }\n  }, [openTipContract]);\n\n  useEffect(() => {\n    if (walletAddress && openTipContract) {\n      setIsStaffFunc();\n    }\n  }, [openTipContract, walletAddress]);\n\n  // wallet connection\n  const connectWallet = async () => {\n    if (window.celo) {\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        kit.defaultAccount = defaultAccount;\n\n        setKit(kit);\n        setWalletAddress(defaultAccount);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"You need to install the celo wallet extension in order to use this app\"\n      );\n    }\n  };\n\n  // set wallet balance and contract\n  const getBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(walletAddress);\n      const cUsdBalance = balance.CELO.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const contract = new kit.web3.eth.Contract(openTipAbi, openTipAddress);\n\n      setOpenTipContract(contract);\n      setBalance(cUsdBalance);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getTips = async () => {\n    try {\n      const myTips = await openTipContract.methods.readMyTips().call();\n      const _tips = [];\n      for (let i = 0; i < myTips.length; i++) {\n        let tip = await new Promise(async (resolve) => {\n          let _tip = await openTipContract.methods.readTip(myTips[i]).call();\n          resolve({\n            message: _tip[0],\n            amount: _tip[1],\n            sender: _tip[2],\n            timeStamp: _tip[3],\n          });\n        });\n        _tips.push(tip);\n      }\n      const loadedTips = await Promise.all(_tips);\n      console.log(loadedTips.length);\n      setTips(loadedTips);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const register = async (uniqueId) => {\n    if (uniqueId) {\n      const _uniqueId = uniqueId + \".dac\";\n      try {\n        await openTipContract.methods\n          .createNewWallet(_uniqueId, walletAddress)\n          .send({ from: walletAddress });\n        alert(\"Registration completed successfully\");\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"Invalid details entered\");\n    }\n  };\n\n  const setNamesTakenFunc = async () => {\n    try {\n      const _namesTaken = await openTipContract.methods.readNamesTaken().call();\n      setNamesTaken(_namesTaken);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const checkAddressWithNameFunc = async (walletId) => {\n    try {\n      const walletAddress = await openTipContract.methods\n        .checkAddressWithName(walletId)\n        .call();\n      return walletAddress;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const tip = async (message, receiverId, receiverAddress, amount) => {\n    if (!message || !receiverId || !receiverAddress) {\n      alert(\"Please enter valid details and try again\");\n    } else {\n      console.log(message, receiverId, receiverAddress, amount);\n      const bigAmount = new BigNumber(amount)\n        .shiftedBy(ERC20_DECIMALS)\n        .toString();\n      try {\n        await openTipContract.methods\n          .tip(message, receiverId, receiverAddress)\n          .send({ from: walletAddress, value: bigAmount });\n        alert(\"You have tipped a staff successfully\");\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const setIsStaffFunc = async () => {\n    try {\n      const name = await openTipContract.methods\n        .checkNameWithAddress(walletAddress)\n        .call();\n      const isStaff = await openTipContract.methods.isStaff(name).call();      \n      setIsStaff(isStaff);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      {isStaff !== null ? (\n        <div className=\"app\">\n          {!isStaff ? (\n            <Home\n              bal={balance}\n              namesTaken={namesTaken}\n              register={register}\n              tip={tip}\n              checkAddress={checkAddressWithNameFunc}\n              userWallet={walletAddress}\n            />\n          ) : (\n            <Staff tips={tips} />\n          )}\n        </div>\n      ) : (\n        <div>Data loading. Please wait</div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}